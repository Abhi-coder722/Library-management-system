services:
  flask_app:
    build: .
    ports:
      - "5000:5000"  # Ensure Flask is exposed on port 5000
    networks:
      - mynetwork
  db:
    image: postgres:13
    container_name: my_postgres_db
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mynetwork

  pgadmin:
    image: dpage/pgadmin4
    container_name: my_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "80:80"
    networks:
      - mynetwork
    depends_on:
      - db

volumes:
  postgres_data:

networks:
  mynetwork:
    driver: bridge
=======
version: '3.8'

services:
  flask_app:
    build: .
    ports:
      - "5000:5000"
    networks:
      - mynetwork
    depends_on:
      - db
      - neo4j
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password

  db:
    image: postgres:13
    container_name: my_postgres_db
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mynetwork

  pgadmin:
    image: dpage/pgadmin4
    container_name: my_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "80:80"
    networks:
      - mynetwork
    depends_on:
      - db

  neo4j:
    image: neo4j:latest
    container_name: my_neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4JLABS_PLUGINS=["apoc"]
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
    volumes:
      - neo4j_data:/data
      - ./init_neo4j.cypher:/docker-entrypoint-initdb.d/init_neo4j.cypher
    networks:
      - mynetwork

volumes:
  postgres_data:
  neo4j_data:

networks:
  mynetwork:
    driver: bridge
>>>>>>> fa6c970 (Neo4j)
